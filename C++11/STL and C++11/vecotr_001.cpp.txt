#include <iostream>
#include <vector>
#include <exception>
using namespace std;


template<typename T>
void printVector(const vector<T>& vec){
        cout<<"used: "<<vec.size()<<"/"<<vec.capacity()<<" max_size: "<<vec.max_size()<<"\n";
        for(const T& t: vec)
        {
                cout<<t<<" ";
        }
        cout<<"\n";
}
int main()
{
        vector<int> numbers;
        vector<string> strings{"hello"," how"," are"," you"," ?"};

        numbers.push_back(100);
        numbers.push_back(200);

        printVector(numbers);
        printVector(strings);
        strings.resize(3);
        printVector(strings);

        numbers.push_back(300);
        numbers.push_back(400);
        numbers.push_back(500);

        for(int *p=&numbers[0]; p<=(&numbers[0]+numbers.size());++p)
        {
                cout<<*p<<"\n";
        }

        cout<<numbers[10];

        try
        {
                cout<<numbers.at(10);
        }
        catch(std::out_of_range& e)
        {
                cerr<<e.what()<<"\n";
        }

        return 0;
}